// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiVeiculos.DataContext;

#nullable disable

namespace WebApiVeiculos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApiVeiculos.Models.EmpresaAssistenciaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmpresaAssistencias");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.GrupoVeiculoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GrupoVeiculo");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.PlanoAssistenciaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cobertura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("PlanoAssistencias");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.VeiculoAssistenciaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.HasIndex("VeiculoId", "PlanoId")
                        .IsUnique();

                    b.ToTable("VeiculoAssistencias");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.VeiculoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.PlanoAssistenciaModel", b =>
                {
                    b.HasOne("WebApiVeiculos.Models.EmpresaAssistenciaModel", "EmpresaAssistencia")
                        .WithMany("Planos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaAssistencia");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.VeiculoAssistenciaModel", b =>
                {
                    b.HasOne("WebApiVeiculos.Models.PlanoAssistenciaModel", "Plano")
                        .WithMany("VeiculoAssistencias")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiVeiculos.Models.VeiculoModel", "Veiculo")
                        .WithMany("VeiculoAssistencias")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.VeiculoModel", b =>
                {
                    b.HasOne("WebApiVeiculos.Models.GrupoVeiculoModel", "GrupoVeiculo")
                        .WithMany("Veiculos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoVeiculo");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.EmpresaAssistenciaModel", b =>
                {
                    b.Navigation("Planos");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.GrupoVeiculoModel", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.PlanoAssistenciaModel", b =>
                {
                    b.Navigation("VeiculoAssistencias");
                });

            modelBuilder.Entity("WebApiVeiculos.Models.VeiculoModel", b =>
                {
                    b.Navigation("VeiculoAssistencias");
                });
#pragma warning restore 612, 618
        }
    }
}
